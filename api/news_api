from flask_restful import Resource, Api
from flask_restful import reqparse
from flask import jsonify
from flask import abort
import extra.auth as auth
from models import Product

product_parser = reqparse.RequestParser()
product_parser.add_argument('title', required=True)
product_parser.add_argument('description', required=True)


class ProductListApi(Resource):
    def __init__(self, auth):
        super(ProductListApi, self).__init__()
        self._auth = auth

    def get(self):
        products = Product.query.all()
        return jsonify(product=[i.serialize for i in products])

    def post(self):
        if not self._auth.is_authorized():
            abort(401)
        args = product_parser.parse_args()
        product = Product.add(args['title'], args['description'], self._auth.get_user())
        return jsonify(product.serialize)


class ProductApi(Resource):

    def __init__(self, auth):
        super(ProductApi, self).__init__()
        self._auth = auth

    def get(self, id):
        product = Product.query.filter_by(id=id).first()
        if not product:
            abort(404)
        return jsonify(product.serialize)

    def delete(self, id):
        if not self._auth.is_authorized():
            abort(401)
        product = Product.query.filter_by(id=id).first()
        if product.user_id != self._auth.get_user().id:
            abort(403)
        Product.delete(product)
        return jsonify({"deleted": True})
